plugins {
    id 'java'
    id 'maven-publish'
    id 'java-library'
    id 'signing'
}

group 'com.ringcentral'
version '3.2.5'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.11.0'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'ringcentral'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'RingCentral SDK'
                description = 'RingCentral Java SDK'
                url = 'https://github.com/ringcentral/ringcentral-java'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'tylerliu'
                        name = 'Tyler Liu'
                        email = 'tyler.liu@ringcentral.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://git@github.com:ringcentral/ringcentral-java.git'
                    developerConnection = 'scm:git:ssh://git@github.com:ringcentral/ringcentral-java.git'
                    url = 'https://github.com/ringcentral/ringcentral-java'
                }
            }
        }
    }
    repositories {
        maven {
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
